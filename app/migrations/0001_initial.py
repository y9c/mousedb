# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-14 10:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddBedding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Bedding Added Date')),
                ('time', models.TimeField(verbose_name='Bedding Added Time')),
                ('note', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AddChow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=200)),
                ('date', models.DateField(verbose_name='Chow Added Date')),
                ('time', models.TimeField(verbose_name='Chow Added Time')),
                ('amount', models.FloatField(verbose_name='Chow Added Amount')),
            ],
        ),
        migrations.CreateModel(
            name='AddDrink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=200)),
                ('date', models.DateField(verbose_name='Drink Added Date')),
                ('time', models.TimeField(verbose_name='Drink Added Time')),
                ('amount', models.FloatField(verbose_name='Drink Amount')),
            ],
        ),
        migrations.CreateModel(
            name='BlogsPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('body', models.TextField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Do_Sack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Sacked Date')),
                ('time', models.TimeField(verbose_name='Sacked Time')),
                ('sacked', models.BooleanField(default=False)),
                ('sackDate', models.DateField(blank=True, null=True, verbose_name='sac date')),
            ],
        ),
        migrations.CreateModel(
            name='Genotype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain', models.CharField(default='C57BL/6', max_length=50)),
                ('line', models.CharField(default='WT', max_length=50)),
                ('locus', models.CharField(max_length=50, null=True)),
                ('sex', models.IntegerField(choices=[(0, 'M'), (1, 'F'), (2, '?')], default=2)),
            ],
        ),
        migrations.CreateModel(
            name='Get_Genotype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_point', models.DateField(unique=True, verbose_name='check_point')),
                ('date', models.DateField(verbose_name='Genotyping Date')),
                ('time', models.TimeField(verbose_name='Genotyping Time')),
                ('strain', models.CharField(default='C57BL/6', max_length=50)),
                ('line', models.CharField(default='WT', max_length=50)),
                ('locus', models.CharField(max_length=50, null=True)),
                ('sex', models.IntegerField(choices=[(0, 'M'), (1, 'F'), (2, '?')], default=2)),
            ],
        ),
        migrations.CreateModel(
            name='Get_Phenotype_Dynamic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_point', models.DateField(unique=True, verbose_name='check_point')),
                ('date', models.DateField(verbose_name='Weighting Date')),
                ('time', models.TimeField(verbose_name='Weighting Time')),
                ('weight', models.FloatField(verbose_name='Weight')),
                ('health', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Get_Phenotype_Static',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_point', models.DateField(unique=True, verbose_name='check_point')),
                ('date', models.DateField(verbose_name='Weighting Date')),
                ('time', models.TimeField(verbose_name='Weighting Time')),
                ('weight', models.FloatField(verbose_name='Weight')),
                ('health', models.CharField(max_length=50, null=True)),
                ('color', models.IntegerField(choices=[(0, 'Black'), (1, 'White'), (2, 'Nake')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Mate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mate_id', models.CharField(max_length=20)),
                ('mate_start_date', models.DateTimeField(verbose_name='Mate Start Date')),
                ('mate_end_date', models.DateTimeField(verbose_name='Mate End Date')),
                ('litter', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mouse_id', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(default='?', max_length=50)),
                ('source', models.IntegerField(choices=[(0, '饲养产生后代'), (1, '广东省实验动物中心'), (2, '南京模式生物中心')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'idle'), (1, 'nuring'), (2, 'mating'), (3, 'weaning'), (4, 'sacked'), (5, 'dead')], default=0)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('dod', models.DateField(blank=True, null=True, verbose_name='date of death')),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='NAME')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='full name')),
                ('married', models.BooleanField(default=False, verbose_name='married')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Phenotype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Weighting Date')),
                ('time', models.TimeField(verbose_name='Weighting Time')),
                ('weight', models.FloatField(verbose_name='Weight')),
                ('health', models.CharField(max_length=50, null=True)),
                ('color', models.IntegerField(choices=[(0, 'Black'), (1, 'White'), (2, 'Nake')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
            ],
        ),
        migrations.AddField(
            model_name='mate',
            name='maternal_id',
            field=models.ManyToManyField(related_name='maternal', to='app.Mouse', verbose_name='maternal mouse object'),
        ),
        migrations.AddField(
            model_name='mate',
            name='paternal_id',
            field=models.ManyToManyField(related_name='paternal', to='app.Mouse', verbose_name='paternal mouse object'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Question'),
        ),
    ]
